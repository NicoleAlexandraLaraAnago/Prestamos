name: Spring Boot CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
jobs:
  build:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        ports:
          - 3306:3306
        env:
          MYSQL_DATABASE: sisdb2025
          MYSQL_ROOT_PASSWORD: 12345
        options: >-
          --health-cmd="mysqladmin ping -h localhost -u root --password=12345 || exit 1"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=10

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: 17
        distribution: 'zulu'

    - name: Set up MySQL client
      run: sudo apt-get install mysql-client

    - name: Wait for MySQL to be ready
      run: |
        curl -L https://github.com/vishnubob/wait-for-it/raw/master/wait-for-it.sh -o wait-for-it.sh
        chmod +x wait-for-it.sh
        ./wait-for-it.sh mysql:3306 --timeout=10 -- echo "MySQL is ready!"

    - name: Build with Maven (skip tests)
      run: mvn clean install -DskipTests

    - name: Check build status
      if: ${{ failure() }}
      run: |
        echo "Build failed. Please check the logs for details."

    - name: Deploy application (optional)
      run: mvn spring-boot:run

    - name: Cache SonarQube packages
      uses: actions/cache@v4
      with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

    - name: Cache Maven packages
      uses: actions/cache@v4
      with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

    - name: Wait for MySQL to be ready in Sonar job (optional)
      run: |
          curl -L https://github.com/vishnubob/wait-for-it/raw/master/wait-for-it.sh -o wait-for-it.sh
          chmod +x wait-for-it.sh
          ./wait-for-it.sh mysql:3306 --timeout=10 -- echo "MySQL is ready!"
      
    - name: Build and analyze with SonarQube (skip tests)
      env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=TestGitHubProject -Dsonar.projectName='TestGitHubProject'
